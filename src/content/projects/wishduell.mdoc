---
title: 'Wishduell'
description: 'Realtime multiplayer quiz game build with SvelteKit, Socket.io and Java'
role: 'Designer, Software Architect & Developer'
tags: 'UX-Design, Realtime-API, Frontend, CI/CD, Docker Architecture'
link: 'https://annex-tracker.de/'
heroImage: '/wishduell.png'
previewImage: '/wishduell.png'
---

# Study Project Software Development 2

This Projekt was part of my Software Development 2 Module. It was developed in a Team of 6, with different experiences and angles.

# The Idea

Goal of the Project was the development of a Realtime Quiz Application, with both Single- and Multiplayer capabilities. The Application should be build with a modern Frontend Framework and a Backend Framework of our choice. The Application should be deployed on a Server and developed using a CI/CD Pipeline.

# Cutting Edge vs Battle Tested

My Team and I had different opinions on the technologies we wanted to use. Some wanted to use the newest and most cutting edge technologies, while others wanted to use technologies that are more battle tested and have a bigger community. We decided to use a mix of both. We used SvelteKit for the Frontend, which was still in Beta at the time, and Java Spring Boot for the Backend, which is a well known and battle tested Framework.
The Realtime API was build with Socket.io.

# A robust and scalable Architecture powerd by Docker

Implementing all the technologies we wanted to use in a robust and scalable architecture was a challenge. I decided to use Docker to containerize our Application and to use Docker Compose to orchestrate the containers. This allowed us to easily scale the Application and to deploy it on a Server.

{% gallery %}
{% picture src="wish/architecture.jpg" /%}
{% /gallery %}
